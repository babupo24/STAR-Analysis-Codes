//
// File generated by rootcint at Wed Jun 15 12:51:38 2022

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIRun12PIDdIRun12PID_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Run12PID_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Run12PID_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Run12PID(void *p);
   static void deleteArray_Run12PID(void *p);
   static void destruct_Run12PID(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Run12PID*)
   {
      ::Run12PID *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Run12PID >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Run12PID", ::Run12PID::Class_Version(), ".sl73_gcc485/obj/StRoot/Run12PID/Run12PID.h", 25,
                  typeid(::Run12PID), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Run12PID::Dictionary, isa_proxy, 4,
                  sizeof(::Run12PID) );
      instance.SetDelete(&delete_Run12PID);
      instance.SetDeleteArray(&deleteArray_Run12PID);
      instance.SetDestructor(&destruct_Run12PID);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Run12PID*)
   {
      return GenerateInitInstanceLocal((::Run12PID*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Run12PID*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Run12PID::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Run12PID::Class_Name()
{
   return "Run12PID";
}

//______________________________________________________________________________
const char *Run12PID::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Run12PID*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Run12PID::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Run12PID*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Run12PID::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Run12PID*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Run12PID::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Run12PID*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Run12PID::Streamer(TBuffer &R__b)
{
   // Stream an object of class Run12PID.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Run12PID::Class(),this);
   } else {
      R__b.WriteClassBuffer(Run12PID::Class(),this);
   }
}

//______________________________________________________________________________
void Run12PID::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Run12PID.
      TClass *R__cl = ::Run12PID::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frefmult", &frefmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmaxpar", &fmaxpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffillNum", &ffillNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frunNum", &frunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fspinconfig", &fspinconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ftrigger", &ftrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVZ", &fVZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvpdVz", &fvpdVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fevTime", &fevTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fverRank", &fverRank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpT[2422]", fpT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fp[2422]", fp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "feta[2422]", feta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fphi[2422]", fphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcharge[2422]", fcharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaPion[2422]", fnSigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaKaon[2422]", fnSigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaProton[2422]", fnSigmaProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaElectron[2422]", fnSigmaElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaPionTof[2422]", fnSigmaPionTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaKaonTof[2422]", fnSigmaKaonTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaProtonTof[2422]", fnSigmaProtonTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSigmaElectronTof[2422]", fnSigmaElectronTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdEdx[2422]", fdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdca[2422]", fdca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffitPts[2422]", ffitPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffitPtsPoss[2422]", ffitPtsPoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fhitsdedx[2422]", fhitsdedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBetaToF[2422]", fBetaToF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_frefmult", &b_frefmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fmaxpar", &b_fmaxpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ffillNum", &b_ffillNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_frunNum", &b_frunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fspinconfig", &b_fspinconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ftrigger", &b_ftrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fVZ", &b_fVZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fvpdVz", &b_fvpdVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fevTime", &b_fevTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fverRank", &b_fverRank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fpT", &b_fpT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fp", &b_fp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_feta", &b_feta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fphi", &b_fphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fcharge", &b_fcharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaPion", &b_fnSigmaPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaKaon", &b_fnSigmaKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaProton", &b_fnSigmaProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaElectron", &b_fnSigmaElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaPionTof", &b_fnSigmaPionTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaKaonTof", &b_fnSigmaKaonTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaProtonTof", &b_fnSigmaProtonTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fnSigmaElectronTof", &b_fnSigmaElectronTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fdEdx", &b_fdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fdca", &b_fdca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ffitPts", &b_ffitPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ffitPtsPoss", &b_ffitPtsPoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fhitsdedx", &b_fhitsdedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_fBetaToF", &b_fBetaToF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger", &trigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHadDiffPt[2][5]", &hHadDiffPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHadDiffM[2][5]", &hHadDiffM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsKpt[2][2][5]", &hPivsKpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsPpt[2][2][5]", &hPivsPpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsEpt[2][2][5]", &hPivsEpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPvsKpt[2][2][5]", &hPvsKpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsKm[2][2][5]", &hPivsKm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsPm[2][2][5]", &hPivsPm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsEm[2][2][5]", &hPivsEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPvsKm[2][2][5]", &hPvsKm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaPionM[2][2][5]", &hsigmaPionM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaKaonM[2][2][5]", &hsigmaKaonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaProtonM[2][2][5]", &hsigmaProtonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaElectronM[2][2][5]", &hsigmaElectronM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutPionM[2][2][5]", &hcutPionM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutKaonM[2][2][5]", &hcutKaonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutProtonM[2][2][5]", &hcutProtonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutElectronM[2][2][5]", &hcutElectronM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutPionPt[2][2][5]", &hcutPionPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutKaonPt[2][2][5]", &hcutKaonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutProtonPt[2][2][5]", &hcutProtonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutElectronPt[2][2][5]", &hcutElectronPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcutPionEta[2][9]", &hcutPionEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaPionPt[2][2][5]", &hsigmaPionPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaKaonPt[2][2][5]", &hsigmaKaonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaProtonPt[2][2][5]", &hsigmaProtonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaElectronPt[2][2][5]", &hsigmaElectronPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaPionPtB[2][2][5]", &hsigmaPionPtB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaKaonPtB[2][2][5]", &hsigmaKaonPtB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaProtonPtB[2][2][5]", &hsigmaProtonPtB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaElectronPtB[2][2][5]", &hsigmaElectronPtB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaPionMB[2][2][5]", &hsigmaPionMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaKaonMB[2][2][5]", &hsigmaKaonMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaProtonMB[2][2][5]", &hsigmaProtonMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaElectronMB[2][2][5]", &hsigmaElectronMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsKeta[2][9]", &hPivsKeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsPeta[2][9]", &hPivsPeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPivsEeta[2][9]", &hPivsEeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPvsKeta[2][9]", &hPvsKeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaPionEta[2][9]", &hsigmaPionEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaKaonEta[2][9]", &hsigmaKaonEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaProtonEta[2][9]", &hsigmaProtonEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsigmaElectronEta[2][9]", &hsigmaElectronEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthPivsKPt[2][2][9]", &inthPivsKPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthPivsKM[2][2][9]", &inthPivsKM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthPivsPPt[2][2][9]", &inthPivsPPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthPivsPM[2][2][9]", &inthPivsPM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthPivsEPt[2][2][9]", &inthPivsEPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthPivsEM[2][2][9]", &inthPivsEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthTofVsnSigmaPiM[2][2][9]", &inthTofVsnSigmaPiM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaPionPt[2][2][9]", &inthsigmaPionPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaKaonPt[2][2][9]", &inthsigmaKaonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaProtonPt[2][2][9]", &inthsigmaProtonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaElectronPt[2][2][9]", &inthsigmaElectronPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaPionM[2][2][9]", &inthsigmaPionM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaKaonM[2][2][9]", &inthsigmaKaonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaProtonM[2][2][9]", &inthsigmaProtonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inthsigmaElectronM[2][2][9]", &inthsigmaElectronM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inth2sigmaPionM[2][2][9]", &inth2sigmaPionM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inth2sigmaProtonM[2][2][9]", &inth2sigmaProtonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inth2sigmaKaonM[2][2][9]", &inth2sigmaKaonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inth2sigmaElectronM[2][2][9]", &inth2sigmaElectronM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaPionPtTOFCut[2][2][5]", &h2sigmaPionPtTOFCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaPionMTOFCut[2][2][5]", &h2sigmaPionMTOFCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaPionEtaTOFCut[2][9]", &h2sigmaPionEtaTOFCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaPionPt[2][2][5]", &h2sigmaPionPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaProtonPt[2][2][5]", &h2sigmaProtonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaKaonPt[2][2][5]", &h2sigmaKaonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaElectronPt[2][2][5]", &h2sigmaElectronPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaPionM[2][2][5]", &h2sigmaPionM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaProtonM[2][2][5]", &h2sigmaProtonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaKaonM[2][2][5]", &h2sigmaKaonM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaElectronM[2][2][5]", &h2sigmaElectronM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaPionEta[2][9]", &h2sigmaPionEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaProtonEta[2][9]", &h2sigmaProtonEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaKaonEta[2][9]", &h2sigmaKaonEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2sigmaElectronEta[2][9]", &h2sigmaElectronEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple1", &ntuple1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple2", &ntuple2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple3", &ntuple3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple4", &ntuple4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple5", &ntuple5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple6", &ntuple6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple7", &ntuple7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple8", &ntuple8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*piplus", &piplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*piminus", &piminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple1JP", &ntuple1JP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple2JP", &ntuple2JP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple3JP", &ntuple3JP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple4JP", &ntuple4JP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple5JP", &ntuple5JP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple1NoJP", &ntuple1NoJP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple2NoJP", &ntuple2NoJP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple3NoJP", &ntuple3NoJP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple4NoJP", &ntuple4NoJP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntuple5NoJP", &ntuple5NoJP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*home", &home);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Run12PID(void *p) {
      delete ((::Run12PID*)p);
   }
   static void deleteArray_Run12PID(void *p) {
      delete [] ((::Run12PID*)p);
   }
   static void destruct_Run12PID(void *p) {
      typedef ::Run12PID current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Run12PID

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

/********************************************************
* .sl73_gcc485/obj/StRoot/Run12PID/Run12PID_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRun12PID_Cint();

extern "C" void G__set_cpp_environmentRun12PID_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Run12PID.h");
  G__cpp_reset_tagtableRun12PID_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevRun12PID_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Run12PID */
static int G__Run12PID_Cint_578_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Run12PID* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Run12PID((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Run12PID((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Run12PID*) G__getstructoffset())->Cut((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Run12PID*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((Run12PID*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->Loop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Run12PID*) G__getstructoffset())->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->Finish((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Run12PID*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Run12PID*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->setHome((TDirectory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Run12PID::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Run12PID::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Run12PID::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Run12PID::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Run12PID*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Run12PID*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Run12PID::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Run12PID::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Run12PID::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Run12PID_Cint_578_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Run12PID::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Run12PID_Cint_578_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Run12PID* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Run12PID(*(Run12PID*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Run12PID G__TRun12PID;
static int G__Run12PID_Cint_578_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Run12PID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Run12PID*) (soff+(sizeof(Run12PID)*i)))->~G__TRun12PID();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Run12PID*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Run12PID*) (soff))->~G__TRun12PID();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Run12PID_Cint_578_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Run12PID* dest = (Run12PID*) G__getstructoffset();
   *dest = *(Run12PID*) libp->para[0].ref;
   const Run12PID& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Run12PID */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRun12PID_Cint {
 public:
  G__Sizep2memfuncRun12PID_Cint(): p(&G__Sizep2memfuncRun12PID_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRun12PID_Cint::*p)();
};

size_t G__get_sizep2memfuncRun12PID_Cint()
{
  G__Sizep2memfuncRun12PID_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRun12PID_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRun12PID_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__Run12PID_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Run12PID */
static void G__setup_memvarRun12PID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID));
   { Run12PID *p; p=(Run12PID*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TChain),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->frefmult)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"frefmult=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fmaxpar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fmaxpar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ffillNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ffillNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->frunNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"frunNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fspinconfig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fspinconfig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftrigger)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"ftrigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fvpdVz)-(long)(p)),102,0,0,-1,-1,-1,1,"fvpdVz=",0,"Included by Babu 11/22/2019");
   G__memvar_setup((void*)((long)(&p->fevTime)-(long)(p)),104,0,0,-1,-1,-1,1,"fevTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fverRank)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fverRank=",0,"included by Babu  11/22/2019");
   G__memvar_setup((void*)((long)(&p->fpT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fpT[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fp[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->feta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"feta[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fphi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fphi[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fcharge)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fcharge[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaPion)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaPion[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaKaon)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaKaon[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaProton)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaProton[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaElectron)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaElectron[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaPionTof)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaPionTof[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaKaonTof)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaKaonTof[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaProtonTof)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaProtonTof[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fnSigmaElectronTof)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fnSigmaElectronTof[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fdEdx)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdEdx[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fdca)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdca[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->ffitPts)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ffitPts[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->ffitPtsPoss)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"ffitPtsPoss[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fhitsdedx)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fhitsdedx[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->fBetaToF)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fBetaToF[2422]=",0,"[fmaxpar]");
   G__memvar_setup((void*)((long)(&p->b_frefmult)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_frefmult=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fmaxpar)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fmaxpar=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ffillNum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_ffillNum=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_frunNum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_frunNum=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fspinconfig)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fspinconfig=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ftrigger)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_ftrigger=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fVZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fVZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_fvpdVz)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fvpdVz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_fevTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fevTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_fverRank)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fverRank=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fpT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fpT=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fp=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_feta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_feta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fphi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fcharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fcharge=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaPion)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaPion=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaKaon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaKaon=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaProton)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaProton=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaElectron)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaElectron=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaPionTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaPionTof=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaKaonTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaKaonTof=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaProtonTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaProtonTof=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fnSigmaElectronTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fnSigmaElectronTof=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fdEdx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fdEdx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fdca)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fdca=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ffitPts)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_ffitPts=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ffitPtsPoss)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_ffitPtsPoss=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fhitsdedx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fhitsdedx=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_fBetaToF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TBranch),-1,-1,1,"b_fBetaToF=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("n=%lldLL",(long long)Run12PID::n).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigger)-(long)(p)),105,0,0,-1,-1,-1,1,"trigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hHadDiffPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hHadDiffPt[2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hHadDiffM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hHadDiffM[2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsKpt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsKpt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsPpt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsPpt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsEpt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsEpt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPvsKpt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPvsKpt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsKm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsKm[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsPm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsPm[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsEm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsEm[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPvsKm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPvsKm[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaPionM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaPionM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaKaonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaKaonM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaProtonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaProtonM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaElectronM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaElectronM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutPionM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutPionM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutKaonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutKaonM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutProtonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutProtonM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutElectronM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutElectronM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutPionPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutPionPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutKaonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutKaonPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutProtonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutProtonPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutElectronPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutElectronPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcutPionEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hcutPionEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaPionPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaPionPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaKaonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaKaonPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaProtonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaProtonPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaElectronPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaElectronPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaPionPtB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaPionPtB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaKaonPtB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaKaonPtB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaProtonPtB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaProtonPtB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaElectronPtB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaElectronPtB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaPionMB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaPionMB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaKaonMB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaKaonMB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaProtonMB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaProtonMB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaElectronMB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaElectronMB[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsKeta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsKeta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsPeta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsPeta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPivsEeta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPivsEeta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPvsKeta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"hPvsKeta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaPionEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaPionEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaKaonEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaKaonEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaProtonEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaProtonEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hsigmaElectronEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"hsigmaElectronEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthPivsKPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthPivsKPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthPivsKM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthPivsKM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthPivsPPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthPivsPPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthPivsPM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthPivsPM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthPivsEPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthPivsEPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthPivsEM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthPivsEM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthTofVsnSigmaPiM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inthTofVsnSigmaPiM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaPionPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaPionPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaKaonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaKaonPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaProtonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaProtonPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaElectronPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaElectronPt[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaPionM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaPionM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaKaonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaKaonM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaProtonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaProtonM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inthsigmaElectronM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH1D),-1,-1,1,"inthsigmaElectronM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inth2sigmaPionM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inth2sigmaPionM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inth2sigmaProtonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inth2sigmaProtonM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inth2sigmaKaonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inth2sigmaKaonM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inth2sigmaElectronM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"inth2sigmaElectronM[2][2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaPionPtTOFCut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaPionPtTOFCut[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaPionMTOFCut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaPionMTOFCut[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaPionEtaTOFCut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaPionEtaTOFCut[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaPionPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaPionPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaProtonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaProtonPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaKaonPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaKaonPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaElectronPt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaElectronPt[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaPionM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaPionM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaProtonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaProtonM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaKaonM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaKaonM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaElectronM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaElectronM[2][2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaPionEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaPionEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaProtonEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaProtonEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaKaonEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaKaonEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2sigmaElectronEta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TH2D),-1,-1,1,"h2sigmaElectronEta[2][9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple6=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple7=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple8=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"piplus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"piminus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple1JP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple2JP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple3JP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple4JP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple5JP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple1NoJP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple2NoJP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple3NoJP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple4NoJP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TNtuple),-1,-1,2,"ntuple5NoJP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TDirectory),-1,-1,2,"home=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Run12PID_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRun12PID_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRun12PID(void) {
   /* Run12PID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID));
   G__memfunc_setup("Run12PID",629,G__Run12PID_Cint_578_0_1, 105, G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID), -1, 0, 1, 1, 1, 0, "C - - 0 - ifile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,G__Run12PID_Cint_578_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,G__Run12PID_Cint_578_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__Run12PID_Cint_578_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__Run12PID_Cint_578_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__Run12PID_Cint_578_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,G__Run12PID_Cint_578_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,G__Run12PID_Cint_578_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - ofile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__Run12PID_Cint_578_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setHome",725,G__Run12PID_Cint_578_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDirectory' - 0 - pHome", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Run12PID_Cint_578_0_11, 85, G__get_linked_tagnum(&G__Run12PID_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Run12PID::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Run12PID_Cint_578_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Run12PID::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Run12PID_Cint_578_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Run12PID::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Run12PID_Cint_578_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Run12PID::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Run12PID_Cint_578_0_15, 85, G__get_linked_tagnum(&G__Run12PID_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Run12PID_Cint_578_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Run12PID_Cint_578_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Run12PID_Cint_578_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Run12PID_Cint_578_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Run12PID::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Run12PID_Cint_578_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Run12PID::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Run12PID_Cint_578_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Run12PID::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Run12PID_Cint_578_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Run12PID::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Run12PID", 629, G__Run12PID_Cint_578_0_23, (int) ('i'), G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID), -1, 0, 1, 1, 1, 0, "u 'Run12PID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Run12PID", 755, G__Run12PID_Cint_578_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Run12PID_Cint_578_0_25, (int) ('u'), G__get_linked_tagnum(&G__Run12PID_CintLN_Run12PID), -1, 1, 1, 1, 1, 0, "u 'Run12PID' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRun12PID_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRun12PID_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRun12PID_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Run12PID_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__Run12PID_CintLN_Run12PID = { "Run12PID" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRun12PID_Cint() {
  G__Run12PID_CintLN_TClass.tagnum = -1 ;
  G__Run12PID_CintLN_TBuffer.tagnum = -1 ;
  G__Run12PID_CintLN_TDirectory.tagnum = -1 ;
  G__Run12PID_CintLN_TMemberInspector.tagnum = -1 ;
  G__Run12PID_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__Run12PID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Run12PID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Run12PID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Run12PID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Run12PID_CintLN_TBranch.tagnum = -1 ;
  G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__Run12PID_CintLN_TChain.tagnum = -1 ;
  G__Run12PID_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Run12PID_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Run12PID_CintLN_TH1D.tagnum = -1 ;
  G__Run12PID_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__Run12PID_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__Run12PID_CintLN_TH2D.tagnum = -1 ;
  G__Run12PID_CintLN_TNtuple.tagnum = -1 ;
  G__Run12PID_CintLN_Run12PID.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRun12PID_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TBranch);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TChain);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_TNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Run12PID_CintLN_Run12PID),sizeof(Run12PID),-1,295936,(char*)NULL,G__setup_memvarRun12PID,G__setup_memfuncRun12PID);
}
extern "C" void G__cpp_setupRun12PID_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupRun12PID_Cint()");
  G__set_cpp_environmentRun12PID_Cint();
  G__cpp_setup_tagtableRun12PID_Cint();

  G__cpp_setup_inheritanceRun12PID_Cint();

  G__cpp_setup_typetableRun12PID_Cint();

  G__cpp_setup_memvarRun12PID_Cint();

  G__cpp_setup_memfuncRun12PID_Cint();
  G__cpp_setup_globalRun12PID_Cint();
  G__cpp_setup_funcRun12PID_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRun12PID_Cint();
  return;
}
class G__cpp_setup_initRun12PID_Cint {
  public:
    G__cpp_setup_initRun12PID_Cint() { G__add_setup_func("Run12PID_Cint",(G__incsetup)(&G__cpp_setupRun12PID_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRun12PID_Cint() { G__remove_setup_func("Run12PID_Cint"); }
};
G__cpp_setup_initRun12PID_Cint G__cpp_setup_initializerRun12PID_Cint;

