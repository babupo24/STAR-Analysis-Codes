//
// File generated by rootcint at Thu May 12 11:44:27 2022

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStSpinPooldIStFcsMIPMakerdIStFcsMIPMaker_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StFcsMIPMaker_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StFcsMIPMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFcsMIPMaker(void *p = 0);
   static void *newArray_StFcsMIPMaker(Long_t size, void *p);
   static void delete_StFcsMIPMaker(void *p);
   static void deleteArray_StFcsMIPMaker(void *p);
   static void destruct_StFcsMIPMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFcsMIPMaker*)
   {
      ::StFcsMIPMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFcsMIPMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFcsMIPMaker", ::StFcsMIPMaker::Class_Version(), ".sl73_gcc485/obj/StRoot/StSpinPool/StFcsMIPMaker/StFcsMIPMaker.h", 17,
                  typeid(::StFcsMIPMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFcsMIPMaker::Dictionary, isa_proxy, 4,
                  sizeof(::StFcsMIPMaker) );
      instance.SetNew(&new_StFcsMIPMaker);
      instance.SetNewArray(&newArray_StFcsMIPMaker);
      instance.SetDelete(&delete_StFcsMIPMaker);
      instance.SetDeleteArray(&deleteArray_StFcsMIPMaker);
      instance.SetDestructor(&destruct_StFcsMIPMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFcsMIPMaker*)
   {
      return GenerateInitInstanceLocal((::StFcsMIPMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFcsMIPMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StFcsMIPMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFcsMIPMaker::Class_Name()
{
   return "StFcsMIPMaker";
}

//______________________________________________________________________________
const char *StFcsMIPMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsMIPMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFcsMIPMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsMIPMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFcsMIPMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsMIPMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFcsMIPMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsMIPMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StFcsMIPMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFcsMIPMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFcsMIPMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFcsMIPMaker::Class(),this);
   }
}

//______________________________________________________________________________
void StFcsMIPMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFcsMIPMaker.
      TClass *R__cl = ::StFcsMIPMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFcsDb", &mFcsDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFcsCollection", &mFcsCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRun", &mRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSub", &mSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFile", &mFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFilename[100]", mFilename);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNTimeBins", &mNTimeBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMinTB", &mMinTB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxTB", &mMaxTB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxAdc", &mMaxAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxAdcSum", &mMaxAdcSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPedSub", &mPedSub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MapofCals", (void*)&MapofCals);
      R__insp.InspectMember("map<int,int>", (void*)&MapofCals, "MapofCals.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thresh", &thresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hcal_array[16]", Hcal_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hcaltowid", &Hcaltowid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ecaltowid", &Ecaltowid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltax", &deltax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaxmin", &deltaxmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltay", &deltay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaymin", &deltaymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltar", &deltar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltarmin", &deltarmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "matchHcalClusE", &matchHcalClusE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcTb2[6]", &mAdcTb2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcTbthresh2[6]", &mAdcTbthresh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcTb[6][748]", &mAdcTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcTbthresh[6][748]", &mAdcTbthresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*maxAdc[6][748]", &maxAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*maxAdcthresh[6][748]", &maxAdcthresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcId[6]", &mAdcId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcSumId[6]", &mAdcSumId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAdcSum[6][748]", &mAdcSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNHit[6]", &mNHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mHitmap[6]", &mHitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNClu[6]", &mNClu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNTowClu[6]", &mNTowClu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNNeiClu[6]", &mNNeiClu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNTowEClu[6][748]", &mNTowEClu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNTowECluIso[6][748]", &mNTowECluIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNTowECluIsoH[6][748]", &mNTowECluIsoH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNClusX", &mNClusX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mNClusY", &mNClusY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEcalClust", &mEcalClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mHcalClust", &mHcalClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*deltar_Ecaltow", &deltar_Ecaltow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HcalE_Ecaltow", &HcalE_Ecaltow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*towenergy[6][748]", &towenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*towadcsum[6][748]", &towadcsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nocut_towadcsum[6][748]", &nocut_towadcsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitsperevent", &hitsperevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rcluster", &rcluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rmincluster", &rmincluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hmatchHcalClusE", &hmatchHcalClusE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*minbias_events", &minbias_events);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFcsMIPMaker(void *p) {
      return  p ? new(p) ::StFcsMIPMaker : new ::StFcsMIPMaker;
   }
   static void *newArray_StFcsMIPMaker(Long_t nElements, void *p) {
      return p ? new(p) ::StFcsMIPMaker[nElements] : new ::StFcsMIPMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFcsMIPMaker(void *p) {
      delete ((::StFcsMIPMaker*)p);
   }
   static void deleteArray_StFcsMIPMaker(void *p) {
      delete [] ((::StFcsMIPMaker*)p);
   }
   static void destruct_StFcsMIPMaker(void *p) {
      typedef ::StFcsMIPMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StFcsMIPMaker

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

/********************************************************
* .sl73_gcc485/obj/StRoot/StSpinPool/StFcsMIPMaker/StFcsMIPMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStFcsMIPMaker_Cint();

extern "C" void G__set_cpp_environmentStFcsMIPMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StFcsMIPMaker.h");
  G__cpp_reset_tagtableStFcsMIPMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStFcsMIPMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StFcsMIPMaker */
static int G__StFcsMIPMaker_Cint_616_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFcsMIPMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsMIPMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFcsMIPMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFcsMIPMaker[n];
       } else {
         p = new((void*) gvp) StFcsMIPMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFcsMIPMaker;
       } else {
         p = new((void*) gvp) StFcsMIPMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsMIPMaker*) G__getstructoffset())->setPedSub((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsMIPMaker*) G__getstructoffset())->setRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsMIPMaker*) G__getstructoffset())->setSubRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFcsMIPMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsMIPMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFcsMIPMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFcsMIPMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsMIPMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsMIPMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsMIPMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsMIPMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsMIPMaker_Cint_616_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsMIPMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFcsMIPMaker_Cint_616_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StFcsMIPMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StFcsMIPMaker(*(StFcsMIPMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFcsMIPMaker G__TStFcsMIPMaker;
static int G__StFcsMIPMaker_Cint_616_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFcsMIPMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFcsMIPMaker*) (soff+(sizeof(StFcsMIPMaker)*i)))->~G__TStFcsMIPMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFcsMIPMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFcsMIPMaker*) (soff))->~G__TStFcsMIPMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StFcsMIPMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStFcsMIPMaker_Cint {
 public:
  G__Sizep2memfuncStFcsMIPMaker_Cint(): p(&G__Sizep2memfuncStFcsMIPMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStFcsMIPMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncStFcsMIPMaker_Cint()
{
  G__Sizep2memfuncStFcsMIPMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStFcsMIPMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker))) {
     StFcsMIPMaker *G__Lderived;
     G__Lderived=(StFcsMIPMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker),G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker),G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker),G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker),G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStFcsMIPMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StFcsMIPMaker */
static void G__setup_memvarStFcsMIPMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker));
   { StFcsMIPMaker *p; p=(StFcsMIPMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsDb),-1,-1,4,"mFcsDb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsCollection),-1,-1,4,"mFcsCollection=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mSub=",0,"need this to get file name from .cxx");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TFile),-1,-1,4,"mFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"mFilename[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNTimeBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMinTB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxTB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxAdcSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPedSub=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"MapofCals=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"thresh=",0,"set adc threshold");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Hcal_array[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Hcaltowid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Ecaltowid=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"deltax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"deltaxmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"deltay=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"deltaymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"deltar=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"deltarmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"matchHcalClusE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mAdcTb2[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mAdcTbthresh2[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mAdcTb[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mAdcTbthresh[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"maxAdc[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"maxAdcthresh[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mAdcId[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mAdcSumId[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"mAdcSum[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"mNHit[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mHitmap[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"mNClu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"mNTowClu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"mNNeiClu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mNTowEClu[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mNTowECluIso[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mNTowECluIsoH[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mNClusX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mNClusY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mEcalClust=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"mHcalClust=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"deltar_Ecaltow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH2F),-1,-1,4,"HcalE_Ecaltow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"towenergy[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"towadcsum[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"nocut_towadcsum[6][748]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"hitsperevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"rcluster=",0,"<-- spatial sep of Hcal clust and nearest Ecal clust");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"rmincluster=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"hmatchHcalClusE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TH1F),-1,-1,4,"minbias_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStFcsMIPMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStFcsMIPMaker(void) {
   /* StFcsMIPMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker));
   G__memfunc_setup("StFcsMIPMaker",1209,G__StFcsMIPMaker_Cint_616_0_1, 105, G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"FcsMIP\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setPedSub",911,G__StFcsMIPMaker_Cint_616_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRun",641,G__StFcsMIPMaker_Cint_616_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSubRun",939,G__StFcsMIPMaker_Cint_616_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFcsMIPMaker_Cint_616_0_8, 85, G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFcsMIPMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsMIPMaker_Cint_616_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsMIPMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsMIPMaker_Cint_616_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFcsMIPMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsMIPMaker_Cint_616_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFcsMIPMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsMIPMaker_Cint_616_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsMIPMaker_Cint_616_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsMIPMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsMIPMaker_Cint_616_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFcsMIPMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsMIPMaker_Cint_616_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsMIPMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsMIPMaker_Cint_616_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFcsMIPMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StFcsMIPMaker", 1209, G__StFcsMIPMaker_Cint_616_0_20, (int) ('i'), G__get_linked_tagnum(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker), -1, 0, 1, 1, 1, 0, "u 'StFcsMIPMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StFcsMIPMaker", 1335, G__StFcsMIPMaker_Cint_616_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStFcsMIPMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStFcsMIPMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStFcsMIPMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StFcsMIPMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_StFcsDb = { "StFcsDb" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_StFcsCollection = { "StFcsCollection" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__StFcsMIPMaker_CintLN_StFcsMIPMaker = { "StFcsMIPMaker" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStFcsMIPMaker_Cint() {
  G__StFcsMIPMaker_CintLN_TClass.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TBuffer.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TObject.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TNamed.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TDataSet.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TH1F.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TFile.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_StMaker.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_StFcsDb.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_StFcsCollection.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_TH2F.tagnum = -1 ;
  G__StFcsMIPMaker_CintLN_StFcsMIPMaker.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStFcsMIPMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_StFcsDb);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_StFcsCollection);
   G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsMIPMaker_CintLN_StFcsMIPMaker),sizeof(StFcsMIPMaker),-1,324864,"StAF chain virtual base class for Makers",G__setup_memvarStFcsMIPMaker,G__setup_memfuncStFcsMIPMaker);
}
extern "C" void G__cpp_setupStFcsMIPMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStFcsMIPMaker_Cint()");
  G__set_cpp_environmentStFcsMIPMaker_Cint();
  G__cpp_setup_tagtableStFcsMIPMaker_Cint();

  G__cpp_setup_inheritanceStFcsMIPMaker_Cint();

  G__cpp_setup_typetableStFcsMIPMaker_Cint();

  G__cpp_setup_memvarStFcsMIPMaker_Cint();

  G__cpp_setup_memfuncStFcsMIPMaker_Cint();
  G__cpp_setup_globalStFcsMIPMaker_Cint();
  G__cpp_setup_funcStFcsMIPMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStFcsMIPMaker_Cint();
  return;
}
class G__cpp_setup_initStFcsMIPMaker_Cint {
  public:
    G__cpp_setup_initStFcsMIPMaker_Cint() { G__add_setup_func("StFcsMIPMaker_Cint",(G__incsetup)(&G__cpp_setupStFcsMIPMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStFcsMIPMaker_Cint() { G__remove_setup_func("StFcsMIPMaker_Cint"); }
};
G__cpp_setup_initStFcsMIPMaker_Cint G__cpp_setup_initializerStFcsMIPMaker_Cint;

