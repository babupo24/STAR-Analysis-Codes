//
// File generated by rootcint at Thu May 12 11:44:52 2022

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStSpinPooldIStFmsCalibMakerdIStFmsCalibMaker_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StFmsCalibMaker_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StFmsCalibMakerQa_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFmsCalibMakerQa(void *p = 0);
   static void *newArray_StFmsCalibMakerQa(Long_t size, void *p);
   static void delete_StFmsCalibMakerQa(void *p);
   static void deleteArray_StFmsCalibMakerQa(void *p);
   static void destruct_StFmsCalibMakerQa(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFmsCalibMakerQa*)
   {
      ::StFmsCalibMakerQa *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFmsCalibMakerQa >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFmsCalibMakerQa", ::StFmsCalibMakerQa::Class_Version(), ".sl73_gcc485/obj/StRoot/StSpinPool/StFmsCalibMaker/StFmsCalibMakerQa.h", 7,
                  typeid(::StFmsCalibMakerQa), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFmsCalibMakerQa::Dictionary, isa_proxy, 4,
                  sizeof(::StFmsCalibMakerQa) );
      instance.SetNew(&new_StFmsCalibMakerQa);
      instance.SetNewArray(&newArray_StFmsCalibMakerQa);
      instance.SetDelete(&delete_StFmsCalibMakerQa);
      instance.SetDeleteArray(&deleteArray_StFmsCalibMakerQa);
      instance.SetDestructor(&destruct_StFmsCalibMakerQa);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFmsCalibMakerQa*)
   {
      return GenerateInitInstanceLocal((::StFmsCalibMakerQa*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFmsCalibMakerQa*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StFmsCalibMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFmsCalibMaker(void *p = 0);
   static void *newArray_StFmsCalibMaker(Long_t size, void *p);
   static void delete_StFmsCalibMaker(void *p);
   static void deleteArray_StFmsCalibMaker(void *p);
   static void destruct_StFmsCalibMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFmsCalibMaker*)
   {
      ::StFmsCalibMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFmsCalibMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFmsCalibMaker", ::StFmsCalibMaker::Class_Version(), ".sl73_gcc485/obj/StRoot/StSpinPool/StFmsCalibMaker/StFmsCalibMaker.h", 19,
                  typeid(::StFmsCalibMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFmsCalibMaker::Dictionary, isa_proxy, 4,
                  sizeof(::StFmsCalibMaker) );
      instance.SetNew(&new_StFmsCalibMaker);
      instance.SetNewArray(&newArray_StFmsCalibMaker);
      instance.SetDelete(&delete_StFmsCalibMaker);
      instance.SetDeleteArray(&deleteArray_StFmsCalibMaker);
      instance.SetDestructor(&destruct_StFmsCalibMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFmsCalibMaker*)
   {
      return GenerateInitInstanceLocal((::StFmsCalibMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFmsCalibMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StFmsCalibMakerQa::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsCalibMakerQa::Class_Name()
{
   return "StFmsCalibMakerQa";
}

//______________________________________________________________________________
const char *StFmsCalibMakerQa::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMakerQa*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsCalibMakerQa::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMakerQa*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsCalibMakerQa::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMakerQa*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsCalibMakerQa::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMakerQa*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StFmsCalibMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsCalibMaker::Class_Name()
{
   return "StFmsCalibMaker";
}

//______________________________________________________________________________
const char *StFmsCalibMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsCalibMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsCalibMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsCalibMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsCalibMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StFmsCalibMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFmsCalibMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFmsCalibMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFmsCalibMaker::Class(),this);
   }
}

//______________________________________________________________________________
void StFmsCalibMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFmsCalibMaker.
      TClass *R__cl = ::StFmsCalibMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mQa", &mQa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFmsColl", &mFmsColl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFmsDbMk", &mFmsDbMk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFile", &mFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mOutName", &mOutName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mApplyBbcZvtx", &mApplyBbcZvtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mApplyVpdTime", &mApplyVpdTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGetMap", &mGetMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGetQaHist", &mGetQaHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGetQaHistAdc", &mGetQaHistAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGetQaTree", &mGetQaTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReadCellStat", &mReadCellStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCellStat[4]", mCellStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", &mEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunNo", &mRunNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrig", &mTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrigMB", &mTrigMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVpdCut", &mVpdCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXing", &mXing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBbcZ", &mBbcZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBbcSlew[2][16][3]", mBbcSlew);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_mass[4]", &mH2_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_massFine[4]", &mH2_massFine);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFmsCalibMaker(void *p) {
      return  p ? new(p) ::StFmsCalibMaker : new ::StFmsCalibMaker;
   }
   static void *newArray_StFmsCalibMaker(Long_t nElements, void *p) {
      return p ? new(p) ::StFmsCalibMaker[nElements] : new ::StFmsCalibMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFmsCalibMaker(void *p) {
      delete ((::StFmsCalibMaker*)p);
   }
   static void deleteArray_StFmsCalibMaker(void *p) {
      delete [] ((::StFmsCalibMaker*)p);
   }
   static void destruct_StFmsCalibMaker(void *p) {
      typedef ::StFmsCalibMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StFmsCalibMaker

//______________________________________________________________________________
void StFmsCalibMakerQa::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFmsCalibMakerQa.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFmsCalibMakerQa::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFmsCalibMakerQa::Class(),this);
   }
}

//______________________________________________________________________________
void StFmsCalibMakerQa::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFmsCalibMakerQa.
      TClass *R__cl = ::StFmsCalibMakerQa::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_bbcZ", &mH1_bbcZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_diffMass", &mH1_diffMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_diffOpenA", &mH1_diffOpenA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_nEvents", &mH1_nEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_trig", &mH1_trig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_adc[4]", &mH2_adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_adcWide[4]", &mH2_adcWide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_massWide[4]", &mH2_massWide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_massPairE[4][7]", &mH2_massPairE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_massOpenA[4][7]", &mH2_massOpenA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_massZgg[4][7]", &mH2_massZgg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_pointsEP[4]", &mH2_pointsEP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_pointsXY[2][3]", &mH2_pointsXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T", &T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNhit", &mNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetId[500]", mDetId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCh[500]", mCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPointB[500]", mPointB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHitE[500]", mHitE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCluTowers[2]", mCluTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCluMax[2]", mCluMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCluMin[2]", mCluMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCluX[2]", mCluX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCluY[2]", mCluY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPointE[2]", mPointE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPointX[2]", mPointX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPointY[2]", mPointY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMass", &mMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOpenA", &mOpenA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZgg", &mZgg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrigBit", &mTrigBit);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFmsCalibMakerQa(void *p) {
      return  p ? new(p) ::StFmsCalibMakerQa : new ::StFmsCalibMakerQa;
   }
   static void *newArray_StFmsCalibMakerQa(Long_t nElements, void *p) {
      return p ? new(p) ::StFmsCalibMakerQa[nElements] : new ::StFmsCalibMakerQa[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFmsCalibMakerQa(void *p) {
      delete ((::StFmsCalibMakerQa*)p);
   }
   static void deleteArray_StFmsCalibMakerQa(void *p) {
      delete [] ((::StFmsCalibMakerQa*)p);
   }
   static void destruct_StFmsCalibMakerQa(void *p) {
      typedef ::StFmsCalibMakerQa current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StFmsCalibMakerQa

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

/********************************************************
* .sl73_gcc485/obj/StRoot/StSpinPool/StFmsCalibMaker/StFmsCalibMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStFmsCalibMaker_Cint();

extern "C" void G__set_cpp_environmentStFmsCalibMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StFmsCalibMaker.h");
  G__add_compiledheader("StFmsCalibMakerQa.h");
  G__cpp_reset_tagtableStFmsCalibMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStFmsCalibMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StFmsCalibMakerQa */
static int G__StFmsCalibMaker_Cint_578_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMakerQa*) G__getstructoffset())->CreateQaHist((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMakerQa*) G__getstructoffset())->CreateQaHistAdc((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMakerQa*) G__getstructoffset())->CreateQaHistZVtx();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMakerQa*) G__getstructoffset())->CreateQaTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMakerQa*) G__getstructoffset())->ResetQaTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFmsCalibMakerQa::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsCalibMakerQa::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFmsCalibMakerQa::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFmsCalibMakerQa::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMakerQa*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsCalibMakerQa::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFmsCalibMakerQa::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsCalibMakerQa::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_578_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFmsCalibMakerQa::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StFmsCalibMaker_Cint_578_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFmsCalibMakerQa *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFmsCalibMakerQa[n];
     } else {
       p = new((void*) gvp) StFmsCalibMakerQa[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFmsCalibMakerQa;
     } else {
       p = new((void*) gvp) StFmsCalibMakerQa;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFmsCalibMaker_Cint_578_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StFmsCalibMakerQa* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StFmsCalibMakerQa(*(StFmsCalibMakerQa*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFmsCalibMakerQa G__TStFmsCalibMakerQa;
static int G__StFmsCalibMaker_Cint_578_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFmsCalibMakerQa*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFmsCalibMakerQa*) (soff+(sizeof(StFmsCalibMakerQa)*i)))->~G__TStFmsCalibMakerQa();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFmsCalibMakerQa*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFmsCalibMakerQa*) (soff))->~G__TStFmsCalibMakerQa();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFmsCalibMaker */
static int G__StFmsCalibMaker_Cint_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFmsCalibMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFmsCalibMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFmsCalibMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFmsCalibMaker[n];
       } else {
         p = new((void*) gvp) StFmsCalibMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFmsCalibMaker;
       } else {
         p = new((void*) gvp) StFmsCalibMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->GetMap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->GetQaHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->GetQaHistAdc((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->GetQaTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->ReadCellStat((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->VpdTimingCut((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->SetOutName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((StFmsCalibMaker*) G__getstructoffset())->CheckFmsTrigger(*(StTriggerId*) libp->para[0].ref, (const int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((StFmsCalibMaker*) G__getstructoffset())->CheckFmsTrigger(*(StTriggerId*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFmsCalibMaker*) G__getstructoffset())->ReadBbcSlewing((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFmsCalibMaker*) G__getstructoffset())->GetBbcZCorr((StTriggerData*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((StFmsCalibMaker*) G__getstructoffset())->GetBbcZCorrMass((StFmsPointPair*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((StFmsCalibMaker*) G__getstructoffset())->GetBbcZCorrMass((StFmsPointPair*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFmsCalibMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsCalibMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFmsCalibMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFmsCalibMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsCalibMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsCalibMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFmsCalibMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsCalibMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsCalibMaker_Cint_585_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFmsCalibMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFmsCalibMaker_Cint_585_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StFmsCalibMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StFmsCalibMaker(*(StFmsCalibMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFmsCalibMaker G__TStFmsCalibMaker;
static int G__StFmsCalibMaker_Cint_585_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFmsCalibMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFmsCalibMaker*) (soff+(sizeof(StFmsCalibMaker)*i)))->~G__TStFmsCalibMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFmsCalibMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFmsCalibMaker*) (soff))->~G__TStFmsCalibMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StFmsCalibMakerQa */

/* StFmsCalibMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStFmsCalibMaker_Cint {
 public:
  G__Sizep2memfuncStFmsCalibMaker_Cint(): p(&G__Sizep2memfuncStFmsCalibMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStFmsCalibMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncStFmsCalibMaker_Cint()
{
  G__Sizep2memfuncStFmsCalibMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStFmsCalibMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa))) {
     StFmsCalibMakerQa *G__Lderived;
     G__Lderived=(StFmsCalibMakerQa*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker))) {
     StFmsCalibMaker *G__Lderived;
     G__Lderived=(StFmsCalibMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker),G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStFmsCalibMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StFmsCalibMakerQa */
static void G__setup_memvarStFmsCalibMakerQa(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa));
   { StFmsCalibMakerQa *p; p=(StFmsCalibMakerQa*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mH1_bbcZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH1F),-1,-1,1,"mH1_bbcZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH1_diffMass)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH1F),-1,-1,1,"mH1_diffMass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH1_diffOpenA)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH1F),-1,-1,1,"mH1_diffOpenA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH1_nEvents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH1F),-1,-1,1,"mH1_nEvents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH1_trig)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH1F),-1,-1,1,"mH1_trig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH2_adc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_adc[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH2_adcWide)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_adcWide[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mH2_massWide)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_massWide[4]=",0,"QA, Mass, 0 < mass < 1 (GeV)");
   G__memvar_setup((void*)((long)(&p->mH2_massPairE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_massPairE[4][7]=",0,"QA, Mass vs. pairE, Zgg < 0.7, in stepwidth of 0.1");
   G__memvar_setup((void*)((long)(&p->mH2_massOpenA)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_massOpenA[4][7]=",0,"QA, Mass vs. openA, Zgg < 0.7, in stepwidth of 0.1");
   G__memvar_setup((void*)((long)(&p->mH2_massZgg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_massZgg[4][7]=",0,"QA, Mass vs. Zgg, pair E > 20, in stepwidth of 10");
   G__memvar_setup((void*)((long)(&p->mH2_pointsEP)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_pointsEP[4]=",0,"QA, Points' eta vs. phi, by detId");
   G__memvar_setup((void*)((long)(&p->mH2_pointsXY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,1,"mH2_pointsXY[2][3]=",0,"QA, Points' XY, by point 0/1, by all/large/small");
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TTree),-1,-1,1,"T=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,115,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("mNhitMax=%lldLL",(long long)StFmsCalibMakerQa::mNhitMax).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mNhit)-(long)(p)),115,0,0,-1,-1,-1,1,"mNhit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mDetId)-(long)(p)),115,0,0,-1,-1,-1,1,"mDetId[500]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mCh)-(long)(p)),115,0,0,-1,-1,-1,1,"mCh[500]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPointB)-(long)(p)),115,0,0,-1,-1,-1,1,"mPointB[500]=",0,"The point this hit belong to: either 0 or 1");
   G__memvar_setup((void*)((long)(&p->mHitE)-(long)(p)),102,0,0,-1,-1,-1,1,"mHitE[500]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mCluTowers)-(long)(p)),115,0,0,-1,-1,-1,1,"mCluTowers[2]=",0,"# of participating towers");
   G__memvar_setup((void*)((long)(&p->mCluMax)-(long)(p)),102,0,0,-1,-1,-1,1,"mCluMax[2]=",0,"SigmaMax");
   G__memvar_setup((void*)((long)(&p->mCluMin)-(long)(p)),102,0,0,-1,-1,-1,1,"mCluMin[2]=",0,"SigmaMin");
   G__memvar_setup((void*)((long)(&p->mCluX)-(long)(p)),102,0,0,-1,-1,-1,1,"mCluX[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mCluY)-(long)(p)),102,0,0,-1,-1,-1,1,"mCluY[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPointE)-(long)(p)),102,0,0,-1,-1,-1,1,"mPointE[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPointX)-(long)(p)),102,0,0,-1,-1,-1,1,"mPointX[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPointY)-(long)(p)),102,0,0,-1,-1,-1,1,"mPointY[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mMass)-(long)(p)),102,0,0,-1,-1,-1,1,"mMass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mOpenA)-(long)(p)),102,0,0,-1,-1,-1,1,"mOpenA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mZgg)-(long)(p)),102,0,0,-1,-1,-1,1,"mZgg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mTrigBit)-(long)(p)),105,0,0,-1,-1,-1,1,"mTrigBit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFmsCalibMaker */
static void G__setup_memvarStFmsCalibMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker));
   { StFmsCalibMaker *p; p=(StFmsCalibMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa),-1,-1,4,"mQa=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCollection),-1,-1,4,"mFmsColl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsDbMaker),-1,-1,4,"mFmsDbMk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TFile),-1,-1,4,"mFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"mOutName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mApplyBbcZvtx=",0,"Turns to true if ReadBbcSlewing is used");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mApplyVpdTime=",0,"Turns to true if VpdTimingCut is used");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mGetMap=",0,"Get maps FmsMapBase, FmsBitShift for calibFms.C");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mGetQaHist=",0,"Get QA histograms: related to mass");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mGetQaHistAdc=",0,"Get QA histograms: ADC distributions by single physics trigger");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mGetQaTree=",0,"Get QA tree");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mReadCellStat=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"mCellStat[4]=",0,"0 for not bad/dead, 1 for bad, 2 for dead, and 9 for converged");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"GOOD=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"BAD=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"DEAD=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"NA3=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"NA4=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"NA5=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"NA6=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"NA7=7LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"NA8=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex),-1,-2,4,"CONVERGED=9LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRunNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTrigMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mVpdCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mXing=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mBbcZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mBbcSlew[2][16][3]=",0,"Oleg, [east/west][pmt][parameter]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,4,"mH2_mass[4]=",0,"Mass vs. Channel, default");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TH2F),-1,-1,4,"mH2_massFine[4]=",0,"Mass vs. Channel, x5 bins");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStFmsCalibMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStFmsCalibMakerQa(void) {
   /* StFmsCalibMakerQa */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa));
   G__memfunc_setup("CreateQaHist",1182,G__StFmsCalibMaker_Cint_578_0_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - detId i - - 0 - maxCh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateQaHistAdc",1446,G__StFmsCalibMaker_Cint_578_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - detId i - - 0 - maxCh "
"i - - 0 - trigId", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateQaHistZVtx",1594,G__StFmsCalibMaker_Cint_578_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateQaTree",1174,G__StFmsCalibMaker_Cint_578_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetQaTree",1093,G__StFmsCalibMaker_Cint_578_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StFmsCalibMaker_Cint_578_0_6, 85, G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFmsCalibMakerQa::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsCalibMaker_Cint_578_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsCalibMakerQa::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsCalibMaker_Cint_578_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFmsCalibMakerQa::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsCalibMaker_Cint_578_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFmsCalibMakerQa::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsCalibMaker_Cint_578_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsCalibMaker_Cint_578_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsCalibMakerQa::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsCalibMaker_Cint_578_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFmsCalibMakerQa::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsCalibMaker_Cint_578_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsCalibMakerQa::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsCalibMaker_Cint_578_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFmsCalibMakerQa::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("StFmsCalibMakerQa", 1642, G__StFmsCalibMaker_Cint_578_0_18, (int) ('i'), G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StFmsCalibMakerQa", 1642, G__StFmsCalibMaker_Cint_578_0_19, (int) ('i'), G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa), -1, 0, 1, 1, 1, 0, "u 'StFmsCalibMakerQa' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StFmsCalibMakerQa", 1768, G__StFmsCalibMaker_Cint_578_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFmsCalibMaker(void) {
   /* StFmsCalibMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker));
   G__memfunc_setup("StFmsCalibMaker",1464,G__StFmsCalibMaker_Cint_585_0_1, 105, G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"fmsCalibMaker\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMap",574,G__StFmsCalibMaker_Cint_585_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQaHist",874,G__StFmsCalibMaker_Cint_585_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQaHistAdc",1138,G__StFmsCalibMaker_Cint_585_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trigId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQaTree",866,G__StFmsCalibMaker_Cint_585_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCellStat",1176,G__StFmsCalibMaker_Cint_585_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - list", "Get cell status from external file", (void*) NULL, 0);
   G__memfunc_setup("VpdTimingCut",1214,G__StFmsCalibMaker_Cint_585_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - vpdCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutName",997,G__StFmsCalibMaker_Cint_585_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFmsTrigger",1496,G__StFmsCalibMaker_Cint_585_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'StTriggerId' - 11 - trigId i - - 10 '480800' mFmsTrigIdBase", "RUN15pp200", (void*) NULL, 0);
   G__memfunc_setup("ReadBbcSlewing",1372,G__StFmsCalibMaker_Cint_585_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename_bbc", "Oleg's BBC slewing correction function", (void*) NULL, 0);
   G__memfunc_setup("GetBbcZCorr",1047,G__StFmsCalibMaker_Cint_585_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "U 'StTriggerData' - 10 - triggerData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBbcZCorrMass",1451,G__StFmsCalibMaker_Cint_585_0_12, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"U 'StFmsPointPair' - 0 - pair f - 'Float_t' 0 - bbcZ "
"g - - 0 'false' returnOpenA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - runNo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StFmsCalibMaker_Cint_585_0_17, 85, G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFmsCalibMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsCalibMaker_Cint_585_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsCalibMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsCalibMaker_Cint_585_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFmsCalibMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsCalibMaker_Cint_585_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFmsCalibMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsCalibMaker_Cint_585_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsCalibMaker_Cint_585_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsCalibMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsCalibMaker_Cint_585_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFmsCalibMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsCalibMaker_Cint_585_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsCalibMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsCalibMaker_Cint_585_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFmsCalibMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StFmsCalibMaker", 1464, G__StFmsCalibMaker_Cint_585_0_29, (int) ('i'), G__get_linked_tagnum(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker), -1, 0, 1, 1, 1, 0, "u 'StFmsCalibMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StFmsCalibMaker", 1590, G__StFmsCalibMaker_Cint_585_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStFmsCalibMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStFmsCalibMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStFmsCalibMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StFmsCalibMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa = { "StFmsCalibMakerQa" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StFmsCollection = { "StFmsCollection" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StFmsDbMaker = { "StFmsDbMaker" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StFmsPointPair = { "StFmsPointPair" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StTriggerData = { "StTriggerData" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StTriggerId = { "StTriggerId" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StFmsCalibMaker = { "StFmsCalibMaker" , 99 , -1 };
G__linked_taginfo G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex = { "StFmsCalibMaker::mCellStatIndex" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStFmsCalibMaker_Cint() {
  G__StFmsCalibMaker_CintLN_TClass.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TBuffer.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TObject.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TNamed.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TDataSet.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TH1F.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TFile.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TTree.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StMaker.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StFmsCollection.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StFmsDbMaker.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StFmsPointPair.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StTriggerData.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StTriggerId.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_TH2F.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StFmsCalibMaker.tagnum = -1 ;
  G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStFmsCalibMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TTree);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StFmsCalibMakerQa),sizeof(StFmsCalibMakerQa),-1,323584,(char*)NULL,G__setup_memvarStFmsCalibMakerQa,G__setup_memfuncStFmsCalibMakerQa);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StFmsCollection);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StFmsDbMaker);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StFmsPointPair);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StTriggerData);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StTriggerId);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StFmsCalibMaker),sizeof(StFmsCalibMaker),-1,324864,(char*)NULL,G__setup_memvarStFmsCalibMaker,G__setup_memfuncStFmsCalibMaker);
   G__get_linked_tagnum_fwd(&G__StFmsCalibMaker_CintLN_StFmsCalibMakercLcLmCellStatIndex);
}
extern "C" void G__cpp_setupStFmsCalibMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStFmsCalibMaker_Cint()");
  G__set_cpp_environmentStFmsCalibMaker_Cint();
  G__cpp_setup_tagtableStFmsCalibMaker_Cint();

  G__cpp_setup_inheritanceStFmsCalibMaker_Cint();

  G__cpp_setup_typetableStFmsCalibMaker_Cint();

  G__cpp_setup_memvarStFmsCalibMaker_Cint();

  G__cpp_setup_memfuncStFmsCalibMaker_Cint();
  G__cpp_setup_globalStFmsCalibMaker_Cint();
  G__cpp_setup_funcStFmsCalibMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStFmsCalibMaker_Cint();
  return;
}
class G__cpp_setup_initStFmsCalibMaker_Cint {
  public:
    G__cpp_setup_initStFmsCalibMaker_Cint() { G__add_setup_func("StFmsCalibMaker_Cint",(G__incsetup)(&G__cpp_setupStFmsCalibMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStFmsCalibMaker_Cint() { G__remove_setup_func("StFmsCalibMaker_Cint"); }
};
G__cpp_setup_initStFmsCalibMaker_Cint G__cpp_setup_initializerStFmsCalibMaker_Cint;

